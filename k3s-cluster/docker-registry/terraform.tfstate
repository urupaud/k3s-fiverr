{
  "version": 4,
  "terraform_version": "0.12.18",
  "serial": 39,
  "lineage": "65cd6cb2-9ff5-a318-48a4-f6b5efb1a25d",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "docker-registry-userdata",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9ab86b6128b471a4ddb4a6d7b084486dfee2c3c12dde7adbdfc7260356cd474a",
            "rendered": "#!/bin/bash\n\napt-get update\napt install -y gnupg2 pass apache2-utils httpie\napt install -y docker.io docker-compose -y\nsystemctl start docker\nsystemctl enable docker\nmkdir -p registry/{nginx,auth}\ncd registry/\nmkdir -p nginx/{conf.d/,ssl}\ncat \u003c\u003cEOF \u003e docker-compose.yml\nversion: '3'\nservices:\n\n#Registry\n  registry:\n    image: registry:2\n    restart: always\n    ports:\n    - \"5000:5000\"\n    environment:\n      REGISTRY_AUTH: htpasswd\n      REGISTRY_AUTH_HTPASSWD_REALM: Registry-Realm\n      REGISTRY_AUTH_HTPASSWD_PATH: /auth/registry.passwd\n      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data\n    volumes:\n      - registrydata:/data\n      - ./auth:/auth\n    networks:\n      - mynet\n\n#Nginx Service\n  nginx:\n    image: nginx:alpine\n    container_name: nginx\n    restart: unless-stopped\n    tty: true\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/conf.d/:/etc/nginx/conf.d/\n      - ./nginx/ssl/:/etc/nginx/ssl/\n    networks:\n      - mynet\n\n#Docker Networks\nnetworks:\n  mynet:\n    driver: bridge\n#Volumes\nvolumes:\n  registrydata:\n    driver: local\nEOF\n\ncat \u003c\u003c'EOF' \u003e auth/registry.passwd\nadmin:$2y$05$qhiXl61JHE3NG10iIOjFMOwfvZ49k3jAFZAatTDW9RwDBQ0yU5I2m\nEOF\n\ncat \u003c\u003c'EOF' \u003e nginx/conf.d/registry.conf\nupstream docker-registry {\n    server registry:5000;\n}\n\nserver {\n    listen 80;\n    server_name registry.emi.pe;\n    return 301 https://registry.emi.pe$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name registry.emi.pe;\n\n    ssl_certificate /etc/nginx/ssl/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/private.key;\n\n    # Log files for Debug\n    error_log  /var/log/nginx/error.log;\n    access_log /var/log/nginx/access.log;\n\n    location / {\n        # Do not allow connections from docker 1.5 and earlier\n        # docker pre-1.6.0 did not properly set the user agent on ping, catch \"Go *\" user agents\n        if ($http_user_agent ~ \"^(docker\\/1\\.(3|4|5(?!\\.[0-9]-dev))|Go ).*$\" )  {\n            return 404;\n        }\n\n        proxy_pass                          http://docker-registry;\n        proxy_set_header  Host              $http_host;\n        proxy_set_header  X-Real-IP         $remote_addr;\n        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header  X-Forwarded-Proto $scheme;\n        proxy_read_timeout                  900;\n    }\n\n}\nEOF\n\ncat \u003c\u003cEOF \u003e nginx/conf.d/additional.conf\nclient_max_body_size 2G;\nEOF\n\ncat \u003c\u003cEOF \u003e nginx/ssl/private.key\n-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCjGs0Cn4cbJhjX\nBffDaFeonxdZS1afkk17a0RYc51SaYzU9seI5VnSV8pDnkZqORyar3i7E/YYMwvu\nRbXCYfq7Nqs8kyw9Z8uS05rDhZnOvUumJ0C63SIDlHlKogxnnPExDZOXyDfoOA29\nE0wUziuol3EKBCYXDbDJRDCwkRCPQ5NBxDJKMq/ELls6jKp3bmP5+dnCdVFLCKxt\nQvgXePndly5jOpaA2fP8MzL7j3AaNk5UC1Dkd7cmqAJe9pdFI3ojh1zVbUYbL8y5\nNh21/z7Hq/9qac7nKBdbIGy19mNRDd790sX/6SXhaupr8IC5/g53EP3aXfm81G6D\nH/JUP5MXAgMBAAECggEATtPBmA50c/0GDUmflEul7eMxnCDKlSVWmBrf9aWut2k2\nvKgmCDXcIsn2AZcJbgX7GpFKlpOPoONu1THQpcjHrlo+CPER9P1oiCYHio5TpvSa\njosy//ymlzdXJWhK+XqCoNPwbG9CAdOxZBti7j00IW9LnO0jYYnm0mbH51W8vJfF\nHC4sE12qrJDHcgNRlNWNPFnr1w+oYqa9TAYZQHmMXghlivSssmBeqd0nypkxtKmq\nHL+12nDk6vNX0a3sjCunbEgIxy8e5JZ7B0MjwdhFLZ9fQKhHMjw9j4qii0YfIcqA\ngsBRoYY0wZrDNN4I4rEKK7+BX9IIdYYejhyXpWby/QKBgQDMvw5+qfvl9tCwBUYC\n9WKrkm7QodXqSkdfCBsTmSvQWuE7xvf4fQMEqQnS89YcxGc7x5/groa34tVR7ZPD\nKIdDL16hb5MFk6H9syrA7jS+x+l/U22nWQMXRT9EXjd27k/HF4OCbjOE7YW5exIr\n/AMVOhqo8TAEbayZ94QP9bLUKwKBgQDL7y+yQ31w21lUEp3CIFkPljbLav5V3JCZ\nCWy6i3YWyGlrEpoYugSRcfL+ujN5L8DuEaokKmTCZ7w+/0q/wmRgTd3jTaNnYVdP\nzLGif/pjb73vTNzJowrRnwJU1Vus7UuO7p+ykzXJPL0E0Ek+bLITLCUuQwyZghIJ\nBd8G+pnqxQKBgGmWGZ5+gLX+C27KuWkrLIA4WsdivhM9zQKYBoab1flz9HVETXqq\n1VSg670LHB7ntikg8DUJK9ZGtyWx9CKPkvm1wwJTrKkSklZoACNQdIjyRVrxJjpH\n8A0fG9phEA9YJHISkTJBLHZfmzek3SErrFdVCIyZHN8bxAf+me81EMzTAoGALNC5\nSJFwRZbOgJ0+seRt7fDyxa0Ti0bXN+pMTIpNPyB3miISXxCx5EyIO9YrbZxC545W\nN3BhiB9HzQhJIu7TJB64fjUXjaZki5LODonVOnjZ4nafpmf//qTU3FOuu8fB7P0f\ndxzGmxyP5Tjof6FfWLtAyHPPlwRwdi8mHeCAZokCgYBO4xVbYh0ofC7yo9gxunGM\ng/BHt0NIXLusSUSmg0GrZWvTWMqSTMm0grfZQNRvEs9a/Vq6f52qhUTnhNggdWI2\nRd/MZjutCERTE2Zn00DpSdGQOAHkNDYXgKfZbXM7BM2o5JIC/U8S5T+xWSlbnCNz\nIjnhBk+Kcrlj/FBj2pDo5w==\n-----END PRIVATE KEY-----\nEOF\n\ncat \u003c\u003cEOF \u003e nginx/ssl/server.crt\n-----BEGIN CERTIFICATE-----\nMIIFUjCCBDqgAwIBAgISA8nOh121DDxkyFzwU+LLFdzmMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0yMDAyMTUwNzEyNDVaFw0y\nMDA1MTUwNzEyNDVaMBMxETAPBgNVBAMMCCouZW1pLnBlMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAoxrNAp+HGyYY1wX3w2hXqJ8XWUtWn5JNe2tEWHOd\nUmmM1PbHiOVZ0lfKQ55Gajkcmq94uxP2GDML7kW1wmH6uzarPJMsPWfLktOaw4WZ\nzr1LpidAut0iA5R5SqIMZ5zxMQ2Tl8g36DgNvRNMFM4rqJdxCgQmFw2wyUQwsJEQ\nj0OTQcQySjKvxC5bOoyqd25j+fnZwnVRSwisbUL4F3j53ZcuYzqWgNnz/DMy+49w\nGjZOVAtQ5He3JqgCXvaXRSN6I4dc1W1GGy/MuTYdtf8+x6v/amnO5ygXWyBstfZj\nUQ3e/dLF/+kl4Wrqa/CAuf4OdxD92l35vNRugx/yVD+TFwIDAQABo4ICZzCCAmMw\nDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAM\nBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQuXJl8Zb9n+4tkw3laWbjszvyiizAfBgNV\nHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEFBQcBAQRjMGEwLgYI\nKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5jcnlwdC5vcmcwLwYI\nKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5jcnlwdC5vcmcvMBsG\nA1UdEQQUMBKCCCouZW1pLnBlggZlbWkucGUwTAYDVR0gBEUwQzAIBgZngQwBAgEw\nNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5j\ncnlwdC5vcmcwggEGBgorBgEEAdZ5AgQCBIH3BIH0APIAdwDnEvKwN34aYvuOyQxh\nhPHqezfLVh0RJlvz4PNL8kFUbgAAAXBH6DZAAAAEAwBIMEYCIQDIDfPGUr2CXjIB\nJGWpOJouXyOv6ZPFY9As0onsvSxeIgIhAK5JFE2esJfm7Mncqtg2QIcZLubJDd1p\nLMFqiu+1QCwdAHcAB7dcG+V9aP/xsMYdIxXHuuZXfFeUt2ruvGE6GmnTohwAAAFw\nR+g2lgAABAMASDBGAiEA8TgcvtiWKPrrmW16ulEa+wEDi3kDFfodsxsVd/OxfpAC\nIQC69kx/duqXkCxfg8+d80Ki7P4urHlJ+xxKQXfONziNpjANBgkqhkiG9w0BAQsF\nAAOCAQEAOLKE6fkuVR2uark9XZSI7f/1mh/SofOkmx23TWYobsLFUVRCNzfX85Vk\ny6+OgO7gL4rzxFIhkzGm9n7CViZj0x0rjtCsUuMtqs5LW2KgA8d2q0Jk9hImEFzS\nTQjuWjnPOaTLqWTeqdhqba+P08Iho8GbgqbKHxp3ast3xW5t9Py6E1qc/Qgx+lS1\nJ9MwDfeqIaoiWpXT/fmeXtz9q7ChJJ6APMlP3sbKW5ywBSZak3MEwite6BcntsS2\nhl+vGXIzjGasdwuoHdcEe7iH8/iqmoTR8s0e2xNT2WTwocAfkuUl1e/3VjdCvXKe\nFWdWMENShzpurwb2zBJsSBi4ikPUog==\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj\n/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==\n-----END CERTIFICATE-----\nEOF\n\ndocker-compose up -d",
            "template": "#!/bin/bash\n\napt-get update\napt install -y gnupg2 pass apache2-utils httpie\napt install -y docker.io docker-compose -y\nsystemctl start docker\nsystemctl enable docker\nmkdir -p registry/{nginx,auth}\ncd registry/\nmkdir -p nginx/{conf.d/,ssl}\ncat \u003c\u003cEOF \u003e docker-compose.yml\nversion: '3'\nservices:\n\n#Registry\n  registry:\n    image: registry:2\n    restart: always\n    ports:\n    - \"5000:5000\"\n    environment:\n      REGISTRY_AUTH: htpasswd\n      REGISTRY_AUTH_HTPASSWD_REALM: Registry-Realm\n      REGISTRY_AUTH_HTPASSWD_PATH: /auth/registry.passwd\n      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data\n    volumes:\n      - registrydata:/data\n      - ./auth:/auth\n    networks:\n      - mynet\n\n#Nginx Service\n  nginx:\n    image: nginx:alpine\n    container_name: nginx\n    restart: unless-stopped\n    tty: true\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/conf.d/:/etc/nginx/conf.d/\n      - ./nginx/ssl/:/etc/nginx/ssl/\n    networks:\n      - mynet\n\n#Docker Networks\nnetworks:\n  mynet:\n    driver: bridge\n#Volumes\nvolumes:\n  registrydata:\n    driver: local\nEOF\n\ncat \u003c\u003c'EOF' \u003e auth/registry.passwd\n${docker-resgitry-credentials}\nEOF\n\ncat \u003c\u003c'EOF' \u003e nginx/conf.d/registry.conf\nupstream docker-registry {\n    server registry:5000;\n}\n\nserver {\n    listen 80;\n    server_name ${docker-registry-fqdn};\n    return 301 https://${docker-registry-fqdn}$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name ${docker-registry-fqdn};\n\n    ssl_certificate /etc/nginx/ssl/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/private.key;\n\n    # Log files for Debug\n    error_log  /var/log/nginx/error.log;\n    access_log /var/log/nginx/access.log;\n\n    location / {\n        # Do not allow connections from docker 1.5 and earlier\n        # docker pre-1.6.0 did not properly set the user agent on ping, catch \"Go *\" user agents\n        if ($http_user_agent ~ \"^(docker\\/1\\.(3|4|5(?!\\.[0-9]-dev))|Go ).*$\" )  {\n            return 404;\n        }\n\n        proxy_pass                          http://docker-registry;\n        proxy_set_header  Host              $http_host;\n        proxy_set_header  X-Real-IP         $remote_addr;\n        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;\n        proxy_set_header  X-Forwarded-Proto $scheme;\n        proxy_read_timeout                  900;\n    }\n\n}\nEOF\n\ncat \u003c\u003cEOF \u003e nginx/conf.d/additional.conf\nclient_max_body_size 2G;\nEOF\n\ncat \u003c\u003cEOF \u003e nginx/ssl/private.key\n-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCjGs0Cn4cbJhjX\nBffDaFeonxdZS1afkk17a0RYc51SaYzU9seI5VnSV8pDnkZqORyar3i7E/YYMwvu\nRbXCYfq7Nqs8kyw9Z8uS05rDhZnOvUumJ0C63SIDlHlKogxnnPExDZOXyDfoOA29\nE0wUziuol3EKBCYXDbDJRDCwkRCPQ5NBxDJKMq/ELls6jKp3bmP5+dnCdVFLCKxt\nQvgXePndly5jOpaA2fP8MzL7j3AaNk5UC1Dkd7cmqAJe9pdFI3ojh1zVbUYbL8y5\nNh21/z7Hq/9qac7nKBdbIGy19mNRDd790sX/6SXhaupr8IC5/g53EP3aXfm81G6D\nH/JUP5MXAgMBAAECggEATtPBmA50c/0GDUmflEul7eMxnCDKlSVWmBrf9aWut2k2\nvKgmCDXcIsn2AZcJbgX7GpFKlpOPoONu1THQpcjHrlo+CPER9P1oiCYHio5TpvSa\njosy//ymlzdXJWhK+XqCoNPwbG9CAdOxZBti7j00IW9LnO0jYYnm0mbH51W8vJfF\nHC4sE12qrJDHcgNRlNWNPFnr1w+oYqa9TAYZQHmMXghlivSssmBeqd0nypkxtKmq\nHL+12nDk6vNX0a3sjCunbEgIxy8e5JZ7B0MjwdhFLZ9fQKhHMjw9j4qii0YfIcqA\ngsBRoYY0wZrDNN4I4rEKK7+BX9IIdYYejhyXpWby/QKBgQDMvw5+qfvl9tCwBUYC\n9WKrkm7QodXqSkdfCBsTmSvQWuE7xvf4fQMEqQnS89YcxGc7x5/groa34tVR7ZPD\nKIdDL16hb5MFk6H9syrA7jS+x+l/U22nWQMXRT9EXjd27k/HF4OCbjOE7YW5exIr\n/AMVOhqo8TAEbayZ94QP9bLUKwKBgQDL7y+yQ31w21lUEp3CIFkPljbLav5V3JCZ\nCWy6i3YWyGlrEpoYugSRcfL+ujN5L8DuEaokKmTCZ7w+/0q/wmRgTd3jTaNnYVdP\nzLGif/pjb73vTNzJowrRnwJU1Vus7UuO7p+ykzXJPL0E0Ek+bLITLCUuQwyZghIJ\nBd8G+pnqxQKBgGmWGZ5+gLX+C27KuWkrLIA4WsdivhM9zQKYBoab1flz9HVETXqq\n1VSg670LHB7ntikg8DUJK9ZGtyWx9CKPkvm1wwJTrKkSklZoACNQdIjyRVrxJjpH\n8A0fG9phEA9YJHISkTJBLHZfmzek3SErrFdVCIyZHN8bxAf+me81EMzTAoGALNC5\nSJFwRZbOgJ0+seRt7fDyxa0Ti0bXN+pMTIpNPyB3miISXxCx5EyIO9YrbZxC545W\nN3BhiB9HzQhJIu7TJB64fjUXjaZki5LODonVOnjZ4nafpmf//qTU3FOuu8fB7P0f\ndxzGmxyP5Tjof6FfWLtAyHPPlwRwdi8mHeCAZokCgYBO4xVbYh0ofC7yo9gxunGM\ng/BHt0NIXLusSUSmg0GrZWvTWMqSTMm0grfZQNRvEs9a/Vq6f52qhUTnhNggdWI2\nRd/MZjutCERTE2Zn00DpSdGQOAHkNDYXgKfZbXM7BM2o5JIC/U8S5T+xWSlbnCNz\nIjnhBk+Kcrlj/FBj2pDo5w==\n-----END PRIVATE KEY-----\nEOF\n\ncat \u003c\u003cEOF \u003e nginx/ssl/server.crt\n-----BEGIN CERTIFICATE-----\nMIIFUjCCBDqgAwIBAgISA8nOh121DDxkyFzwU+LLFdzmMA0GCSqGSIb3DQEBCwUA\nMEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD\nExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0yMDAyMTUwNzEyNDVaFw0y\nMDA1MTUwNzEyNDVaMBMxETAPBgNVBAMMCCouZW1pLnBlMIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAoxrNAp+HGyYY1wX3w2hXqJ8XWUtWn5JNe2tEWHOd\nUmmM1PbHiOVZ0lfKQ55Gajkcmq94uxP2GDML7kW1wmH6uzarPJMsPWfLktOaw4WZ\nzr1LpidAut0iA5R5SqIMZ5zxMQ2Tl8g36DgNvRNMFM4rqJdxCgQmFw2wyUQwsJEQ\nj0OTQcQySjKvxC5bOoyqd25j+fnZwnVRSwisbUL4F3j53ZcuYzqWgNnz/DMy+49w\nGjZOVAtQ5He3JqgCXvaXRSN6I4dc1W1GGy/MuTYdtf8+x6v/amnO5ygXWyBstfZj\nUQ3e/dLF/+kl4Wrqa/CAuf4OdxD92l35vNRugx/yVD+TFwIDAQABo4ICZzCCAmMw\nDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAM\nBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQuXJl8Zb9n+4tkw3laWbjszvyiizAfBgNV\nHSMEGDAWgBSoSmpjBH3duubRObemRWXv86jsoTBvBggrBgEFBQcBAQRjMGEwLgYI\nKwYBBQUHMAGGImh0dHA6Ly9vY3NwLmludC14My5sZXRzZW5jcnlwdC5vcmcwLwYI\nKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5sZXRzZW5jcnlwdC5vcmcvMBsG\nA1UdEQQUMBKCCCouZW1pLnBlggZlbWkucGUwTAYDVR0gBEUwQzAIBgZngQwBAgEw\nNwYLKwYBBAGC3xMBAQEwKDAmBggrBgEFBQcCARYaaHR0cDovL2Nwcy5sZXRzZW5j\ncnlwdC5vcmcwggEGBgorBgEEAdZ5AgQCBIH3BIH0APIAdwDnEvKwN34aYvuOyQxh\nhPHqezfLVh0RJlvz4PNL8kFUbgAAAXBH6DZAAAAEAwBIMEYCIQDIDfPGUr2CXjIB\nJGWpOJouXyOv6ZPFY9As0onsvSxeIgIhAK5JFE2esJfm7Mncqtg2QIcZLubJDd1p\nLMFqiu+1QCwdAHcAB7dcG+V9aP/xsMYdIxXHuuZXfFeUt2ruvGE6GmnTohwAAAFw\nR+g2lgAABAMASDBGAiEA8TgcvtiWKPrrmW16ulEa+wEDi3kDFfodsxsVd/OxfpAC\nIQC69kx/duqXkCxfg8+d80Ki7P4urHlJ+xxKQXfONziNpjANBgkqhkiG9w0BAQsF\nAAOCAQEAOLKE6fkuVR2uark9XZSI7f/1mh/SofOkmx23TWYobsLFUVRCNzfX85Vk\ny6+OgO7gL4rzxFIhkzGm9n7CViZj0x0rjtCsUuMtqs5LW2KgA8d2q0Jk9hImEFzS\nTQjuWjnPOaTLqWTeqdhqba+P08Iho8GbgqbKHxp3ast3xW5t9Py6E1qc/Qgx+lS1\nJ9MwDfeqIaoiWpXT/fmeXtz9q7ChJJ6APMlP3sbKW5ywBSZak3MEwite6BcntsS2\nhl+vGXIzjGasdwuoHdcEe7iH8/iqmoTR8s0e2xNT2WTwocAfkuUl1e/3VjdCvXKe\nFWdWMENShzpurwb2zBJsSBi4ikPUog==\n-----END CERTIFICATE-----\n\n-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow\nSjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT\nGkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC\nAQ8AMIIBCgKCAQEAnNMM8FrlLke3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF\nq6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8\nSMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0\nZ8h/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA\na6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj\n/PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIDAQABo4IBfTCCAXkwEgYDVR0T\nAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG\nCCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv\nbTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k\nc3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw\nVAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC\nARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz\nMDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu\nY3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF\nAAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo\nuM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/\nwApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwu\nX4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG\nPfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6\nKOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==\n-----END CERTIFICATE-----\nEOF\n\ndocker-compose up -d",
            "vars": {
              "docker-registry-fqdn": "registry.emi.pe",
              "docker-resgitry-credentials": "admin:$2y$05$qhiXl61JHE3NG10iIOjFMOwfvZ49k3jAFZAatTDW9RwDBQ0yU5I2m"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip",
      "name": "docker-registry",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0bd056acbb59530f9",
            "domain": "vpc",
            "id": "eipalloc-03c7fb694bf61d6b8",
            "instance": "i-03a11a472a9e19bff",
            "network_interface": "eni-0acb8c5824b70fd40",
            "private_dns": "ip-172-31-80-254.ec2.internal",
            "private_ip": "172.31.80.254",
            "public_dns": "ec2-3-225-127-42.compute-1.amazonaws.com",
            "public_ip": "3.225.127.42",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "docker-registry"
            },
            "timeouts": null,
            "vpc": true
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_instance.docker-registry",
            "aws_security_group.sg-docker-registry"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "docker-registry",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-07ebfd5b3428b6f4d",
            "arn": "arn:aws:ec2:us-east-1:181063004884:instance/i-03a11a472a9e19bff",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "cpu_core_count": 1,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-03a11a472a9e19bff",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.micro",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "k3s",
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-0acb8c5824b70fd40",
            "private_dns": "ip-172-31-80-254.ec2.internal",
            "private_ip": "172.31.80.254",
            "public_dns": "ec2-34-203-244-34.compute-1.amazonaws.com",
            "public_ip": "34.203.244.34",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "volume_id": "vol-0f8df515d576ace0b",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [
              "sgregistry"
            ],
            "source_dest_check": false,
            "subnet_id": "subnet-d3475cfd",
            "tags": {
              "Name": "docker-registry"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "096d5006f9dfaac5d2935f316655f6c1c85cbf8b",
            "user_data_base64": null,
            "volume_tags": {},
            "vpc_security_group_ids": [
              "sg-02059204683a61bf1"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.sg-docker-registry"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "sg-docker-registry",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:181063004884:security-group/sg-02059204683a61bf1",
            "description": "This security group is for docker-registry servers.",
            "egress": [],
            "id": "sg-02059204683a61bf1",
            "ingress": [],
            "name": "sgregistry",
            "name_prefix": null,
            "owner_id": "181063004884",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "sgdocker-registry"
            },
            "timeouts": null,
            "vpc_id": "vpc-70cee70a"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "sg-docker-registry-in-http",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": null,
            "from_port": 80,
            "id": "sgrule-583367841",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-02059204683a61bf1",
            "self": false,
            "source_security_group_id": null,
            "to_port": 80,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.sg-docker-registry"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "sg-docker-registry-in-https",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": null,
            "from_port": 443,
            "id": "sgrule-1217196168",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-02059204683a61bf1",
            "self": false,
            "source_security_group_id": null,
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.sg-docker-registry"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "sg-docker-registry-in-ssh",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": null,
            "from_port": 22,
            "id": "sgrule-2488213780",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-02059204683a61bf1",
            "self": false,
            "source_security_group_id": null,
            "to_port": 22,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.sg-docker-registry"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "sg-docker-registry-out-all-any",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": null,
            "from_port": 0,
            "id": "sgrule-790739516",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-02059204683a61bf1",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.sg-docker-registry"
          ]
        }
      ]
    }
  ]
}
